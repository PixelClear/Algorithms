#include <iostream>
#include <vector>
#include <iterator>

using std::vector;
using std::pair;

vector<bool> visited;
bool reachable = false;
int reach(vector<vector<int> > &adj, int x, int y) {

    vector<int>::iterator it;
    visited[x] = true;
    for(it = adj[x].begin(); it < adj[x].end(); it++)
    {
        if(visited[*it] != true) {
            if(*it == y) {
                reachable = true;
                return 0;
            }
             else
                reach(adj, *it, y);
        }
    }

    return reachable;
}

int main() {
    size_t n, m;
    std::cin >> n >> m;
    vector<vector<int> > adj(n, vector<int>());
    visited.reserve(m);
    for (size_t i = 0; i < m; i++) {
        int x, y;
        std::cin >> x >> y;
        adj[x - 1].push_back(y - 1);
        adj[y - 1].push_back(x - 1);
        visited[i] = false;
    }
    int x, y;
    std::cin >> x >> y;
    std::cout << reach(adj, x - 1, y - 1);
}
