#include <iostream>
#include <vector>

using std::vector;
using std::pair;

vector<bool> visited;

void explore(vector<vector<int> > &adj, int x)
{
    vector<int>::iterator it;
    visited[x] = true;
    for(it = adj[x].begin(); it < adj[x].end() ; it++)
    {
        if(visited[*it] == false)
            explore(adj, *it);
    }
}

int number_of_components(vector<vector<int> > &adj) {
    int res = 0;

    for(int i = 0 ; i < adj.size(); i ++)
    {
        if(visited[i] == false)
        {
            explore(adj, i);
            res++;
        }
    }
    return res;
}

int main() {
    size_t n, m;
    std::cin >> n >> m;
    vector<vector<int> > adj(n, vector<int>());
    visited.reserve(m);
    for (size_t i = 0; i < m; i++) {
        int x, y;
        std::cin >> x >> y;
        adj[x - 1].push_back(y - 1);
        adj[y - 1].push_back(x - 1);
        visited[i] = false;
    }
    std::cout << number_of_components(adj);
}
